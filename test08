local RunService = game:GetService("RunService")

local Main = {}

Main.Configuration = {
    Fly = false,        
    SpeedFly = 7.5,     
    KeyFly = "x",      
    
    VehicleFly = false, 
    SpeedVehicleFly = 250, 
    KeyVehicleFly = "e",

    Noclip = false,  
    KeyNoclip = "n", 

}


function Main.Load()
    local plr = game.Players.LocalPlayer
    local mouse = plr:GetMouse()
    local localplayer = plr
    local torso
    local keys = {w=false, a=false, s=false, d=false}
    local flying = false
    local vehicleFlying = false
    local keyDownConnection, keyUpConnection
    local lastKeyFly = Main.Configuration.KeyFly
    local lastKeyVehicleFly = Main.Configuration.KeyVehicleFly
    local lastFlyState = Main.Configuration.Fly
    local lastVehicleFlyState = Main.Configuration.VehicleFly
    local initialCollisions = {}
    local noclipConnection

    local function SaveInitialCollisions()
        if localplayer.Character then
            for _, child in pairs(localplayer.Character:GetDescendants()) do
                if child:IsA("BasePart") then
                    -- Sauvegarde l'état de CanCollide de chaque partie
                    initialCollisions[child] = child.CanCollide
                end
            end
        end
    end
    
    local function SetNoclip(state)
        if localplayer.Character then
            for _, child in pairs(localplayer.Character:GetDescendants()) do
                if child:IsA("BasePart") then
                    if state then
                        -- Lors du noclip, on désactive CanCollide pour toutes les parties
                        child.CanCollide = false
                    else
                        -- Lorsque le noclip est désactivé, on rétablit l'état initial de CanCollide
                        child.CanCollide = initialCollisions[child] or true
                    end
                end
            end
        end
    end
    
    -- Cette fonction s'assure que le noclip est appliqué correctement
    local function UpdateNoclip()
        if Main.Configuration.Noclip then
            SaveInitialCollisions()  -- Sauvegarde l'état initial des collisions
            if not noclipConnection then
                noclipConnection = RunService.Stepped:Connect(function()
                    SetNoclip(true)  -- Applique le noclip
                end)
            end
        else
            if noclipConnection then
                noclipConnection:Disconnect()
                noclipConnection = nil
            end
            SetNoclip(false)  -- Désactive le noclip et restaure les collisions
        end
    end
    

    local function setupTorso()
        if workspace:FindFirstChild("Core") then
            workspace.Core:Destroy()
        end

        local Core = Instance.new("Part")
        Core.Name = "Core"
        Core.Size = Vector3.new(0.05, 0.05, 0.05)
        
        Core.Parent = workspace
        local Weld = Instance.new("Weld", Core)
        Weld.Part0 = Core
        local torsoName = "HumanoidRootPart"
        
        if localplayer.Character:FindFirstChild("Torso") then
            torsoName = "Torso"
        elseif localplayer.Character:FindFirstChild("UpperTorso") then
            torsoName = "UpperTorso"
        elseif localplayer.Character:FindFirstChild("LowerTorso") then
            torsoName = "LowerTorso"
        end
        
        Weld.Part1 = localplayer.Character:WaitForChild(torsoName)
        Weld.C0 = CFrame.new(0, 0, 0)
        torso = Core
    end

    local function stop()
        flying = false
        Main.Configuration.Fly = false
    end

    local function start()
        if not torso then return end
        flying = true
        local pos = Instance.new("BodyPosition", torso)
        local gyro = Instance.new("BodyGyro", torso)
        pos.Name = "EPIXPOS"
        pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
        pos.position = torso.Position
        gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        gyro.cframe = torso.CFrame
        
        repeat
            RunService.Heartbeat:Wait()
            localplayer.Character.Humanoid.PlatformStand = true

            -- Vérifier si aucune touche n'est pressée
            if not keys.w and not keys.a and not keys.s and not keys.d then
                pos.position = torso.Position  -- Stop immédiat
            else
                local new = gyro.cframe - gyro.cframe.p + pos.position
                
                if keys.w then
                    new = new + workspace.CurrentCamera.CFrame.lookVector * Main.Configuration.SpeedFly
                end
                if keys.s then
                    new = new - workspace.CurrentCamera.CFrame.lookVector * Main.Configuration.SpeedFly
                end
                if keys.d then
                    new = new * CFrame.new(Main.Configuration.SpeedFly, 0, 0)
                end
                if keys.a then
                    new = new * CFrame.new(-Main.Configuration.SpeedFly, 0, 0)
                end
                
                pos.position = new.p
            end
            
            gyro.cframe = workspace.CurrentCamera.CFrame
        until not Main.Configuration.Fly

        gyro:Destroy()
        pos:Destroy()
        localplayer.Character.Humanoid.PlatformStand = false
    end

    local function startVehicleFly()
        local seat = plr.Character and plr.Character.Humanoid.SeatPart
        if not seat then return end

        local bg = Instance.new("BodyGyro", seat)
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.cframe = seat.CFrame

        local bv = Instance.new("BodyVelocity", seat)
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

        vehicleFlying = true
        repeat
            RunService.Heartbeat:Wait()

            -- Vérifier si aucune touche n'est pressée
            if not keys.w and not keys.a and not keys.s and not keys.d then
                bv.velocity = Vector3.new(0, 0, 0) -- Stop immédiat
            else
                local moveVector = (workspace.CurrentCamera.CFrame.lookVector * (keys.w and 1 or keys.s and -1 or 0))
                    + ((workspace.CurrentCamera.CFrame * CFrame.new((keys.a and -1 or keys.d and 1 or 0), 0, 0).p)
                    - workspace.CurrentCamera.CFrame.p)
                bv.velocity = moveVector * Main.Configuration.SpeedVehicleFly
            end

            bg.CFrame = seat.CFrame
        until not Main.Configuration.VehicleFly

        bg:Destroy()
        bv:Destroy()
        vehicleFlying = false
    end

    local function resetKeyEvents()
        if keyDownConnection then keyDownConnection:Disconnect() end
        if keyUpConnection then keyUpConnection:Disconnect() end

        keyDownConnection = mouse.KeyDown:Connect(function(key)
            if key:lower() == "w" then keys.w = true end
            if key:lower() == "s" then keys.s = true end
            if key:lower() == "a" then keys.a = true end
            if key:lower() == "d" then keys.d = true end
            
            if key:lower() == Main.Configuration.KeyFly:lower() then
                Main.Configuration.Fly = not Main.Configuration.Fly
            end
            
            if key:lower() == Main.Configuration.KeyVehicleFly:lower() then
                Main.Configuration.VehicleFly = not Main.Configuration.VehicleFly
            end
        end)

        keyUpConnection = mouse.KeyUp:Connect(function(key)
            if key:lower() == "w" then keys.w = false end
            if key:lower() == "s" then keys.s = false end
            if key:lower() == "a" then keys.a = false end
            if key:lower() == "d" then keys.d = false end
                        if key:lower() == Main.Configuration.KeyNoclip:lower() then
                Main.Configuration.Noclip = not Main.Configuration.Noclip
                UpdateNoclip()
            end
        end)
    end

    -- Boucle pour surveiller les changements de KeyFly, KeyVehicleFly, Fly et VehicleFly
    spawn(function()
        while true do
            RunService.Heartbeat:Wait()
            
            if Main.Configuration.Noclip ~= lastNoclipState then
                lastNoclipState = Main.Configuration.Noclip
                UpdateNoclip()
            end            
            
            if Main.Configuration.KeyFly ~= lastKeyFly then
                lastKeyFly = Main.Configuration.KeyFly
                resetKeyEvents()
            end

            if Main.Configuration.KeyVehicleFly ~= lastKeyVehicleFly then
                lastKeyVehicleFly = Main.Configuration.KeyVehicleFly
                resetKeyEvents()
            end

            if Main.Configuration.Fly ~= lastFlyState then
                lastFlyState = Main.Configuration.Fly
                if Main.Configuration.Fly then
                    start()
                else
                    stop()
                end
            end

            if Main.Configuration.VehicleFly ~= lastVehicleFlyState then
                lastVehicleFlyState = Main.Configuration.VehicleFly
                if Main.Configuration.VehicleFly then
                    startVehicleFly()
                else
                    vehicleFlying = false
                end
            end
        end
    end)

    plr.CharacterAdded:Connect(function()
        wait(1)
        setupTorso()
        resetKeyEvents()
    end)

    setupTorso()
    resetKeyEvents()
end

return Main
